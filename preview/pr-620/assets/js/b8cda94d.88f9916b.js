"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[27122],{15979:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"analysts/development/gems/parse/text-to-column","title":"TextToColumn","description":"Convert text into a column in your table","source":"@site/docs/analysts/development/gems/parse/text-to-column.md","sourceDirName":"analysts/development/gems/parse","slug":"/analysts/text-to-column","permalink":"/prophecy-docs-staging/preview/pr-620/analysts/text-to-column","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/prophecy-docs-staging/preview/pr-620/tags/gems"},{"inline":true,"label":"analyst","permalink":"/prophecy-docs-staging/preview/pr-620/tags/analyst"},{"inline":true,"label":"parse","permalink":"/prophecy-docs-staging/preview/pr-620/tags/parse"}],"version":"current","frontMatter":{"title":"TextToColumn","id":"text-to-column","slug":"/analysts/text-to-column","description":"Convert text into a column in your table","tags":["gems","analyst","parse"]},"sidebar":"mySidebar","previous":{"title":"Except","permalink":"/prophecy-docs-staging/preview/pr-620/analysts/except"},"next":{"title":"Email","permalink":"/prophecy-docs-staging/preview/pr-620/analysts/email"}}');var l=n(74848),r=n(28453);const a={title:"TextToColumn",id:"text-to-column",slug:"/analysts/text-to-column",description:"Convert text into a column in your table",tags:["gems","analyst","parse"]},i=void 0,o={},c=[{value:"Parameters",id:"parameters",level:2}];function d(e){const t={h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)("span",{class:"badge",children:"SQL"}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)("br",{}),"\n",(0,l.jsx)(t.p,{children:"The TextToColumn gem lets you parse a text string and convert it to a column by specifying a delimiter."}),"\n",(0,l.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,l.jsxs)(t.table,{children:[(0,l.jsx)(t.thead,{children:(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.th,{children:"Parameter"}),(0,l.jsx)(t.th,{children:"Description"})]})}),(0,l.jsxs)(t.tbody,{children:[(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Select Column to Split"}),(0,l.jsx)(t.td,{children:"The column that contains the text you would like to split."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Delimiter"}),(0,l.jsx)(t.td,{children:"The character that delimits the separate values."})]}),(0,l.jsxs)(t.tr,{children:[(0,l.jsx)(t.td,{children:"Select Split Strategy"}),(0,l.jsx)(t.td,{children:(0,l.jsxs)("ul",{class:"table-list",children:[(0,l.jsx)("li",{children:"Split to columns: Values will be split into individual rows in one or more columns."}),(0,l.jsx)("li",{children:"Split to rows: Values will be split into individual rows in one column."})]})})]})]})]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(96540);const l={},r=s.createContext(l);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);