"use strict";(self.webpackChunkdocs_4=self.webpackChunkdocs_4||[]).push([[18755],{23340:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>u,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"Spark/gems/transform/bulk-column-expressions","title":"BulkColumnExpressions","description":"Change the data type of multiple columns at once","source":"@site/docs/Spark/gems/transform/bulk-column-expressions.md","sourceDirName":"Spark/gems/transform","slug":"/Spark/gems/transform/bulk-column-expressions","permalink":"/prophecy-docs-staging/preview/pr-595/Spark/gems/transform/bulk-column-expressions","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"gems","permalink":"/prophecy-docs-staging/preview/pr-595/tags/gems"},{"inline":true,"label":"type","permalink":"/prophecy-docs-staging/preview/pr-595/tags/type"},{"inline":true,"label":"columns","permalink":"/prophecy-docs-staging/preview/pr-595/tags/columns"}],"version":"current","frontMatter":{"title":"BulkColumnExpressions","id":"bulk-column-expressions","description":"Change the data type of multiple columns at once","tags":["gems","type","columns"]},"sidebar":"mySidebar","previous":{"title":"Aggregate","permalink":"/prophecy-docs-staging/preview/pr-595/Spark/gems/transform/aggregate"},"next":{"title":"BulkColumnRename","permalink":"/prophecy-docs-staging/preview/pr-595/Spark/gems/transform/bulk-column-rename"}}');var t=n(74848),r=n(28453),l=n(49235),i=n(65537),c=n(79329);const o={title:"BulkColumnExpressions",id:"bulk-column-expressions",description:"Change the data type of multiple columns at once",tags:["gems","type","columns"]},u=void 0,d={},p=[{value:"Parameters",id:"parameters",level:2},{value:"Example",id:"example",level:2},{value:"Example code",id:"example-code",level:2}];function h(e){const s={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(l.A,{python_package_name:"",python_package_version:"",scala_package_name:"ProphecySparkBasicsScala",scala_package_version:"0.1.9+",scala_lib:"",python_lib:"",uc_single:"14.3+",uc_shared:"14.3+",livy:"3.0.1+"}),"\n",(0,t.jsx)(s.p,{children:"The BulkColumnExpressions gem primarily lets you cast or change the data type of multiple columns at once. It provides additional functionality, including:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Adding a prefix or suffix to selected columns."}),"\n",(0,t.jsx)(s.li,{children:"Applying a custom expression to selected columns."}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"parameters",children:"Parameters"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Parameter"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Data Type of the columns to do operations on"}),(0,t.jsx)(s.td,{children:"The data type of columns to select."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Selected Columns"}),(0,t.jsx)(s.td,{children:"The columns on which to apply transformations."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Change output column name"}),(0,t.jsx)(s.td,{children:"An option to add a prefix or suffix to the selected column names."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Change output column type"}),(0,t.jsx)(s.td,{children:"The data type that the columns will be transformed into."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:"Output Expression"}),(0,t.jsxs)(s.td,{children:["A Spark SQL expression that can be applied to the selected columns. This field is required. If you only want to select the column, use ",(0,t.jsx)(s.code,{children:"column_value"})," as the expression."]})]})]})]}),"\n",(0,t.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(s.p,{children:"Assume you have some columns in a table that represent zero-based indices and are stored as long data types. You want them to represent one-based indices and be stored as integers to optimize memory use."}),"\n",(0,t.jsx)(s.p,{children:"Using the BulkColumnExpressions gem, you can:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Filter your columns by long data types."}),"\n",(0,t.jsx)(s.li,{children:"Select the columns you wish to transform."}),"\n",(0,t.jsx)(s.li,{children:"Cast the output column(s) to be integers."}),"\n",(0,t.jsxs)(s.li,{children:["Include ",(0,t.jsx)(s.code,{children:"column_value + 1"})," in the expression field to shift the indices."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"example-code",children:"Example code"}),"\n","\n",(0,t.jsxs)(i.A,{children:[(0,t.jsx)(c.A,{value:"py",label:"Python",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-py",children:'def bulk_column_casting(spark: SparkSession, in0: DataFrame) -> DataFrame:\n    return in0.select(\n        *(\n          [expr("`customer_id`").alias("str_customer_id").cast(StringType())]\n          + [col("`" + colName + "`") for colName in sorted(set(in0.columns) - {"customer_id"})]\n          + []\n        )\n    )\n'})})}),(0,t.jsx)(c.A,{value:"scala",label:"Scala",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-scala",children:'object bulk_column_expressions {\n  def apply(context: Context, in: DataFrame): DataFrame = {\n    var allExpressions = List(\n      expr(\n        "column_value"\n          .replace("column_value", "`status`")\n          .replace("column_name",  "\'status\'")\n      ).as("status").cast(StringType)\n    ) ++ (in.columns.toSet -- List("status").toSet).map(columnName =>\n      col("`" + columnName + "`")\n    )\n    in.select(allExpressions: _*)\n  }\n}\n'})})})]})]})}function m(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>i});var a=n(96540);const t={},r=a.createContext(t);function l(e){const s=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),a.createElement(r.Provider,{value:s},e.children)}},49235:(e,s,n)=>{n.d(s,{A:()=>t});n(96540);var a=n(74848);function t(e){return(0,a.jsxs)("div",{children:[e.python_package_name&&e.python_package_version&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,a.jsxs)("span",{className:"badge-dependency",children:[(0,a.jsx)("span",{className:"left",children:e.python_package_name}),(0,a.jsx)("span",{className:"right",children:e.python_package_version})]})}),e.scala_package_name&&e.scala_package_version&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/package-hub/",children:(0,a.jsxs)("span",{className:"badge-dependency",children:[(0,a.jsx)("span",{className:"left",children:e.scala_package_name}),(0,a.jsx)("span",{className:"right",children:e.scala_package_version})]})}),e.python_lib&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,a.jsxs)("span",{className:"badge-dependency",children:[(0,a.jsx)("span",{className:"left",children:"ProphecyLibsPython"}),(0,a.jsx)("span",{className:"right",children:e.python_lib})]})}),e.scala_lib&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/extensibility/dependencies/prophecy-libraries",children:(0,a.jsxs)("span",{className:"badge-dependency",children:[(0,a.jsx)("span",{className:"left",children:"ProphecyLibsScala"}),(0,a.jsx)("span",{className:"right",children:e.scala_lib})]})}),e.uc_single&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/",children:(0,a.jsxs)("span",{className:"badge-spark",children:[(0,a.jsx)("span",{className:"left",children:"Databricks UC Single Cluster"}),(0,a.jsx)("span",{className:"right",children:e.uc_single})]})}),e.uc_shared&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/databricks/ucshared",children:(0,a.jsxs)("span",{className:"badge-spark",children:[(0,a.jsx)("span",{className:"left",children:"Databricks UC Shared"}),(0,a.jsx)("span",{className:"right",children:e.uc_shared})]})}),e.livy&&(0,a.jsx)("a",{href:"https://docs.prophecy.io/administration/fabrics/Spark-fabrics/livy",children:(0,a.jsxs)("span",{className:"badge-spark",children:[(0,a.jsx)("span",{className:"left",children:"Livy"}),(0,a.jsx)("span",{className:"right",children:e.livy})]})}),(0,a.jsx)("br",{}),(0,a.jsx)("br",{})]})}},65537:(e,s,n)=>{n.d(s,{A:()=>k});var a=n(96540),t=n(18215),r=n(65627),l=n(56347),i=n(50372),c=n(30604),o=n(11861),u=n(78749);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:s}=e;return!!s&&"object"==typeof s&&"value"in s}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:s,children:n}=e;return(0,a.useMemo)((()=>{const e=s??function(e){return d(e).map((e=>{let{props:{value:s,label:n,attributes:a,default:t}}=e;return{value:s,label:n,attributes:a,default:t}}))}(n);return function(e){const s=(0,o.XI)(e,((e,s)=>e.value===s.value));if(s.length>0)throw new Error(`Docusaurus error: Duplicate values "${s.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[s,n])}function h(e){let{value:s,tabValues:n}=e;return n.some((e=>e.value===s))}function m(e){let{queryString:s=!1,groupId:n}=e;const t=(0,l.W6)(),r=function(e){let{queryString:s=!1,groupId:n}=e;if("string"==typeof s)return s;if(!1===s)return null;if(!0===s&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:s,groupId:n});return[(0,c.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const s=new URLSearchParams(t.location.search);s.set(r,e),t.replace({...t.location,search:s.toString()})}),[r,t])]}function x(e){const{defaultValue:s,queryString:n=!1,groupId:t}=e,r=p(e),[l,c]=(0,a.useState)((()=>function(e){let{defaultValue:s,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(s){if(!h({value:s,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${s}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return s}const a=n.find((e=>e.default))??n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:s,tabValues:r}))),[o,d]=m({queryString:n,groupId:t}),[x,b]=function(e){let{groupId:s}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(s),[t,r]=(0,u.Dv)(n);return[t,(0,a.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:t}),f=(()=>{const e=o??x;return h({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{f&&c(f)}),[f]);return{selectedValue:l,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);c(e),d(e),b(e)}),[d,b,r]),tabValues:r}}var b=n(9136);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var g=n(74848);function y(e){let{className:s,block:n,selectedValue:a,selectValue:l,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),u=e=>{const s=e.currentTarget,n=c.indexOf(s),t=i[n].value;t!==a&&(o(s),l(t))},d=e=>{let s=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=c.indexOf(e.currentTarget)+1;s=c[n]??c[0];break}case"ArrowLeft":{const n=c.indexOf(e.currentTarget)-1;s=c[n]??c[c.length-1];break}}s?.focus()};return(0,g.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},s),children:i.map((e=>{let{value:s,label:n,attributes:r}=e;return(0,g.jsx)("li",{role:"tab",tabIndex:a===s?0:-1,"aria-selected":a===s,ref:e=>{c.push(e)},onKeyDown:d,onClick:u,...r,className:(0,t.A)("tabs__item",f.tabItem,r?.className,{"tabs__item--active":a===s}),children:n??s},s)}))})}function j(e){let{lazy:s,children:n,selectedValue:r}=e;const l=(Array.isArray(n)?n:[n]).filter(Boolean);if(s){const e=l.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,g.jsx)("div",{className:"margin-top--md",children:l.map(((e,s)=>(0,a.cloneElement)(e,{key:s,hidden:e.props.value!==r})))})}function v(e){const s=x(e);return(0,g.jsxs)("div",{className:(0,t.A)("tabs-container",f.tabList),children:[(0,g.jsx)(y,{...s,...e}),(0,g.jsx)(j,{...s,...e})]})}function k(e){const s=(0,b.A)();return(0,g.jsx)(v,{...e,children:d(e.children)},String(s))}},79329:(e,s,n)=>{n.d(s,{A:()=>l});n(96540);var a=n(18215);const t={tabItem:"tabItem_Ymn6"};var r=n(74848);function l(e){let{children:s,hidden:n,className:l}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,a.A)(t.tabItem,l),hidden:n,children:s})}}}]);